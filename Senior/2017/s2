import java.util.*;
import java.util.Map.Entry;
import java.io.*;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int n = readInt(), arr[] = new int[n];
		for(int i = 0; i < n; i++) {
			arr[i] = readInt();
		}
		Arrays.sort(arr);
		int lowLength = 0, highLength = 0;
		if(n % 2 == 0) {
			lowLength = n / 2;
			highLength = n / 2;
		}else {
			lowLength = n / 2 + 1;
			highLength = n / 2;
		}
		int[] low = new int[lowLength], high = new int[highLength];
		for(int i = 0; i < lowLength; i++) {
			low[i] = arr[i];
		}
		for(int i = lowLength; i < n; i++) {
			high[i - lowLength] = arr[i];
		}
//		System.out.println(Arrays.toString(arr));
		for(int i = lowLength - 1, j = 0; i > 0; i--, j++) {
			System.out.print(low[i] + " " + high[j] + " ");
		}
		if(n % 2 == 1) {
			System.out.print(low[0]);
		}else {
			System.out.print(low[0] + " " + high[highLength - 1]);
		}
		
	} 
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}

	static long readLong() throws IOException {
		return Long.parseLong(next());
	}

	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}

	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}

	static char readCharacter() throws IOException {
		return next().charAt(0);
	}

	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
