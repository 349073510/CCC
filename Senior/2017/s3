import java.util.*;
import java.io.*;
import java.math.*;
 
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int[] freq = new int[2001];
		int n = readInt();
		for(int i = 0; i < n; i++) freq[readInt()]++;
		int[] cnt = new int[4001];
		for(int i = 1; i <= 2000; i++) {
			for(int j = i; j <= 2000; j++) {
				if(i == j) {
					cnt[i + j] += freq[i] / 2;
				}else {
					cnt[i + j] += Math.min(freq[i], freq[j]);
				}
			}
		}
		int length = 0, num = 0;
		for(int i = 2; i <= 4000; i++) {
			if(cnt[i] > length) {
				length = cnt[i];
				num = 1;
			}else if(cnt[i] == length) {
				num++;
			}
		}
		System.out.println(length + " " + num);
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
