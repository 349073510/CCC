import java.util.*;
import java.io.*;
import java.math.*;
 
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int m = readInt(), n = readInt(), row[] = new int[m + 1], col[] = new int[n + 1];
		for(int k = readInt(); k > 0; k--) {
			char c = readCharacter();
			int num = readInt();
			if(c == 'R') row[num]++;
			if(c == 'C') col[num]++;
		}
		int ans = 0;
		for(int i = 1; i <= m; i++) {
			int r = row[i];
			for(int j = 1; j <= n; j++) {
				int c = col[j];
				if(r % 2 == 0 && c % 2 == 1) ans++;
				else if(r % 2 == 1 && c % 2 == 0) ans++;
 			}
		}
		System.out.println(ans);
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
