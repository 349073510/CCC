import java.util.*;
import java.io.*;
import java.math.*;
import java.util.Map.*;
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int n = readInt();
		HashMap<Character, String> map = new HashMap<>();
		for(int i = 0; i < n; i++) {
			map.put(readCharacter(), next());
		}
		String s = readLine(), ans = "";
		int index = 0;
		while(index < s.length()) {
			for(Entry<Character, String> entry : map.entrySet()) {
				char c = entry.getKey();
				String str = entry.getValue();
				if(str.length() <= s.length() - index && s.substring(index, index + str.length()).equals(str)) {
					ans += c;
					index += str.length();
					break;
				}
			}
		}
		System.out.println(ans);
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
