import java.util.*;
import java.io.*;
import java.math.*;
 
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int g = readInt(), p = readInt();
		TreeSet<Integer> set = new TreeSet();
		for(int i = 1; i <= g; i++) set.add(i);
		int ans = 0;
		for(int i = 0; i < p; i++) {
			int gi = readInt();
			Integer best = set.floor(gi);
			if(best != null) {
				ans++;
				set.remove(best);
			}else break;
		}
		System.out.println(ans);
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
