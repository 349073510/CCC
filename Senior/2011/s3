import java.util.*;
import java.io.*;
import java.math.*;
 
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		for(int t = readInt(); t > 0; t--) {
			int m = readInt(), x = readInt(), y = readInt();
			fun(m, x, y);
		}
	}
	static void fun(int m, int x, int y) {
		int blk = (int) Math.pow(5, m - 1);
		int bx = x / blk, by = y / blk;
		if((by == 0 && 1 <= bx && bx <= 3) ||  (by == 1 && bx == 2)) {
			System.out.println("crystal");
			return;
		}else if((by == 1 && (bx == 1 || bx == 3)) || (by == 2 && bx == 2)) {
			if(m == 1) {
				System.out.println("empty");
				return;
			}
			x = x % blk; y = y % blk;
		}else {
			System.out.println("empty");
			return;
		}
		if(m == 1) {
			System.out.println("empty");
			return;
		}
		fun(m - 1, x, y);
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
