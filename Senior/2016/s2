import java.util.*;
import java.util.Map.Entry;
import java.io.*;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int question = readInt(), n = readInt(), d[] = new int[n], p[] = new int[n];
		for(int i = 0; i < n; i++) {
			d[i] = readInt();
		}
		for(int i = 0; i < n; i++) {
			p[i] = readInt();
		}
		Arrays.sort(d);
		Arrays.sort(p);
		int ans = 0;
		if(question == 1) {
			for(int i = 0; i < n; i++) {
				ans += Math.max(d[i], p[i]);
			}
		}else if(question == 2) {
			for(int i = 0, j = n - 1; i < n; i++, j--) {
				ans += Math.max(d[i], p[j]);
			}
		}
		System.out.println(ans);
	} 
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}

	static long readLong() throws IOException {
		return Long.parseLong(next());
	}

	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}

	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}

	static char readCharacter() throws IOException {
		return next().charAt(0);
	}

	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
