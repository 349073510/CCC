import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st; 
	public static void main(String[] args) throws IOException, InterruptedException {
		int n = readInt();
		for(int i = 0; i < n; i++) {
			char[] str = readLine().toCharArray();
			int cnt = 0, index = 0;
			String ans = "";
			for( ; cnt < 10; ) {
				char c = str[index];
				index++;
				if(c == '-') continue;
				switch(c){
				case 'A':
				case 'B':
				case 'C':
					ans += '2';
					break;
				case 'D':
				case 'E':
				case 'F':
					ans += '3';
					break;
				case 'G':
				case 'H':
				case 'I':
					ans += '4';
					break;
				case 'J':
				case 'K':
				case 'L':
					ans += '5';
					break;
				case 'M':
				case 'N':
				case 'O':
					ans += '6';
					break;
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
					ans += '7';
					break;
				case 'T':
				case 'U':
				case 'V':
					ans += '8';
					break;
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
					ans += '9';
					break;
				default:
					ans += c;	
					break;
				}
				cnt++;
			}
			System.out.println(ans.substring(0, 3) + '-' + ans.substring(3, 6) + '-' + ans.substring(6));
		}
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
