import java.util.*;
import java.io.*;
import java.math.*;
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int t = readInt();
		for(int i = 0; i < t; i++) {
			int n = readInt();
			for(int a = 2; a <= n; a++) {
				int b = 2*n - a;
				if(isPrime(a) && isPrime(b)) {
					System.out.println(a + " " + b);
					break;
				}
			}
		}
	}
	static boolean isPrime(int x) {
		for(int i = 2; i * i <= x; i++) {
			if(x % i == 0) return false;
		}
		return true;
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
