import java.util.*;
import java.io.*;
import java.math.*;
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int c = readInt(), a[][] = new int[2][c];
		int ans = 0;
		for(int i = 0; i < 2; i++) {
			for(int j = 0; j < c; j++) {
				a[i][j] = readInt();
				ans += a[i][j];
			}
		}
		ans *= 3;
		for(int i = 0; i < c; i++) {
			if(a[0][i] == 0) continue;
			if(i + 1 < c && a[0][i + 1] == 1) ans -= 2;
			if(a[1][i] == 1 && i % 2 == 0) ans -= 2;
		}
		for(int i = 1; i < c; i++) {
			if(a[1][i] == 0) continue;
			if(a[1][i - 1] == 1) ans -= 2;
		}
		System.out.println(ans);
    }
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
