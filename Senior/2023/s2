import java.util.*;
import java.io.*;
import java.math.*;
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;
	public static void main(String[] args) throws IOException, InterruptedException {
		int n = readInt(), a[] = new int[n], absDiff[][] = new int[n][n];
		for(int i = 0; i < n; i++) {
			a[i] = readInt();
			for(int j = 0; j < n; j++) {
				absDiff[i][j] = -1;
			}
		}
		int[] ans = new int[n];
		Arrays.fill(ans, Integer.MAX_VALUE);
		for(int i = 0; i < n; i++) {
			int j1 = 0, j2 = j1 + i;
			while(j2 < n) {
				if(j2 >= j1 + 2 && absDiff[j1 + 1][j2 - 1] != -1) {
					ans[i] = Math.min(ans[i], Math.abs(a[j1] - a[j2]) + absDiff[j1 + 1][j2 - 1]);
					absDiff[j1][j2] = absDiff[j2][j1] = Math.abs(a[j1] - a[j2]) + absDiff[j1 + 1][j2 - 1];
					j1++; j2++;
					continue;
				}
				absDiff[j1][j2] = absDiff[j2][j1] = Math.abs(a[j1] - a[j2]);
				ans[i] = Math.min(ans[i], Math.abs(a[j2] - a[j1]));
				j1++; j2++;
			}
		}
		for(int i = 0; i < n - 1; i++) {
			System.out.print(ans[i] + " ");
		}
		System.out.println(ans[n - 1]);
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}
	static long readLong() throws IOException {
		return Long.parseLong(next());
	}
	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}
	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}
	static char readCharacter() throws IOException {
		return next().charAt(0);
	}
	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
